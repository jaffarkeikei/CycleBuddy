# Dockerfile for Frontend (React/Vite) - Simple version
FROM node:18-alpine as build

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Accept build arguments for environment variables
ARG VITE_API_URL
ARG VITE_SOROBAN_RPC_URL
ARG VITE_NETWORK_PASSPHRASE
ARG VITE_GEMINI_API_KEY
ARG VITE_GOOGLE_TTS_API_KEY
ARG VITE_ENCRYPT_HEALTH_DATA
ARG VITE_SIMULATION_MODE

# Set environment variables
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_SOROBAN_RPC_URL=$VITE_SOROBAN_RPC_URL
ENV VITE_NETWORK_PASSPHRASE=$VITE_NETWORK_PASSPHRASE
ENV VITE_GEMINI_API_KEY=$VITE_GEMINI_API_KEY
ENV VITE_GOOGLE_TTS_API_KEY=$VITE_GOOGLE_TTS_API_KEY
ENV VITE_ENCRYPT_HEALTH_DATA=$VITE_ENCRYPT_HEALTH_DATA
ENV VITE_SIMULATION_MODE=$VITE_SIMULATION_MODE

# Build the application (skip TypeScript checks for deployment)
RUN npm run build:production

# Production stage - nginx to serve static files
FROM nginx:alpine

# Copy built files to nginx
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration template and startup script
COPY nginx.conf.template /etc/nginx/nginx.conf.template
COPY start-nginx.sh /usr/local/bin/start-nginx.sh

# Install gettext-base for envsubst
RUN apk add --no-cache gettext

# Make startup script executable
RUN chmod +x /usr/local/bin/start-nginx.sh

# Expose port 8080 (Cloud Run default)
EXPOSE 8080

# Start nginx with dynamic port configuration
CMD ["/usr/local/bin/start-nginx.sh"] 